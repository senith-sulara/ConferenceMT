{"ast":null,"code":"import _defineProperty from \"/home/ps/IdeaProjects/Conference Management Tool/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ps/IdeaProjects/Conference Management Tool/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ps/IdeaProjects/Conference Management Tool/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/ps/IdeaProjects/Conference Management Tool/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/ps/IdeaProjects/Conference Management Tool/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/ps/IdeaProjects/Conference Management Tool/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/ps/IdeaProjects/Conference Management Tool/Frontend/src/components/views/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { MDBMask, MDBRow, MDBCol, MDBBtn, MDBView, MDBContainer, MDBAnimation, MDBAlert, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBCardImage } from 'mdbreact';\nimport './Login.css';\nimport { MDBCard, MDBCardBody, MDBInput } from 'mdbreact';\nimport Signup from \"../SignUp/Signup\";\nimport { getUser, saveUser } from \"../../services/signup.service\";\nimport { loginUser } from \"../../services/login.service\";\nimport * as Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.toggle2 = function () {\n      _this.setState({\n        modal: !_this.state.modal,\n        modal2: !_this.state.model2\n      });\n    };\n\n    _this.toggle3 = function () {\n      _this.setState({\n        modal2: false,\n        fname: \"\",\n        email: \"\",\n        password: \"\",\n        confirmpass: \"\"\n      });\n    };\n\n    _this.state = {\n      collapse: false,\n      isWideEnough: false,\n      modal: false,\n      model2: false,\n      fname: '',\n      email: '',\n      password: '',\n      confirmpass: '',\n      loginEmail: '',\n      loginPass: '',\n      loginEmailV: false,\n      loginPassV: false\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.validateUser = _this.validateUser.bind(_assertThisInitialized(_this));\n    _this.onChangeFname = _this.onChangeFname.bind(_assertThisInitialized(_this));\n    _this.onChangeEmail = _this.onChangeEmail.bind(_assertThisInitialized(_this));\n    _this.onChangePassword = _this.onChangePassword.bind(_assertThisInitialized(_this));\n    _this.onChangeConfirmPassword = _this.onChangeConfirmPassword.bind(_assertThisInitialized(_this));\n    _this.onChangeEmailV = _this.onChangeEmailV.bind(_assertThisInitialized(_this));\n    _this.onChangePassV = _this.onChangePassV.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    }\n  }, {\n    key: \"onChangeEmailV\",\n    value: function onChangeEmailV(event) {\n      this.setState(_defineProperty({\n        loginEmail: event.target.value\n      }, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onChangePassV\",\n    value: function onChangePassV(event) {\n      this.setState(_defineProperty({\n        loginPass: event.target.value\n      }, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onChangeFname\",\n    value: function onChangeFname(event) {\n      console.log(event.target.value);\n      this.setState(_defineProperty({\n        fname: event.target.value\n      }, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onChangeEmail\",\n    value: function onChangeEmail(event) {\n      this.setState(_defineProperty({\n        email: event.target.value\n      }, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onChangePassword\",\n    value: function onChangePassword(event) {\n      this.setState(_defineProperty({\n        password: event.target.value\n      }, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onChangeConfirmPassword\",\n    value: function onChangeConfirmPassword(event) {\n      this.setState(_defineProperty({\n        confirmpass: event.target.value\n      }, event.target.name, event.target.value));\n    } // submitUser(event) {\n    //     event.preventDefault();\n    //     event.target.className += \" was-validated\";\n    //     if (this.state.password == this.state.confirmpass) {\n    //         if (this.state.fname != '') {\n    //             if (this.state.email != '') {\n    //                 if (this.state.password != '') {\n    //                     if (this.state.confirmpass != '') {\n    //                         const userDetail = {\n    //                             userName: this.state.fname,\n    //                             email: this.state.email,\n    //                             password: this.state.password,\n    //                             userType: 'Customer'\n    //                         }\n    //                         getUser(this.state.email).then(res => {\n    //                             if(res.data.message === 'not found'){\n    //                                 saveUser(userDetail).then(res=>{\n    //                                     if (res.data.success === 'successful') {\n    //                                         this.setState({\n    //                                             fname: '',\n    //                                             password: '',\n    //                                             confirmpass: '',\n    //                                             email: '',\n    //                                             modal2 :false\n    //                                         })\n    //                                         Swal.fire(\n    //                                             '',\n    //                                             'Added Success',\n    //                                             'success'\n    //                                         )\n    //                                     } else {\n    //                                         Swal.fire(\n    //                                             '',\n    //                                             'Added fail',\n    //                                             'error'\n    //                                         )\n    //                                     }\n    //                                 }).catch(error => console.error(error));\n    //                             }else {\n    //                                 Swal.fire(\n    //                                     '',\n    //                                     'You Cant Use This Email Please Enter Another One',\n    //                                     'error'\n    //                                 )\n    //                             }\n    //                         }).catch(error => console.error(error));\n    //                     } else {\n    //                     }\n    //                 } else {\n    //                 }\n    //\n    //             } else {\n    //             }\n    //\n    //         } else {\n    //         }\n    //     } else {\n    //         Swal.fire('',\n    //             'password and confirm password are not the same !',\n    //             'error');\n    //     }\n    // };\n\n  }, {\n    key: \"validateUser\",\n    value: function validateUser(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n\n      if (this.state.loginEmail != '') {\n        this.setState({\n          loginEmailV: false\n        });\n\n        if (this.state.loginPass != '') {\n          this.setState({\n            loginPassV: false\n          });\n          loginUser(this.state.loginEmail, this.state.loginPass).then(function (res) {\n            if (res.data.message !== 'not found') {\n              if (res.data.message.userType === 'WKC') {\n                localStorage.setItem(\"WKCLogged\", \"WKCLogged\");\n                localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                localStorage.setItem(\"CustomerId\", res.data.message._id);\n\n                _this2.props.history.push('/wkc');\n\n                _this2.setState({\n                  loginEmail: '',\n                  loginPass: '',\n                  loginEmailV: false,\n                  loginPassV: false\n                });\n              } else if (res.data.message.userType === 'ATTENDEE') {\n                localStorage.setItem(\"AttendeeCLogged\", \"AttendeeCLogged\");\n                localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                localStorage.setItem(\"CustomerId\", res.data.message._id);\n\n                _this2.props.history.push('/attendee');\n\n                _this2.setState({\n                  loginEmail: '',\n                  loginPass: '',\n                  loginEmailV: false,\n                  loginPassV: false\n                });\n              } else if (res.data.message.userType === 'RESEARCHER') {\n                localStorage.setItem(\"ResearcherCLogged\", \"ResearcherCLogged\");\n                localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                localStorage.setItem(\"CustomerId\", res.data.message._id);\n\n                _this2.props.history.push('/researcher');\n\n                _this2.setState({\n                  loginEmail: '',\n                  loginPass: '',\n                  loginEmailV: false,\n                  loginPassV: false\n                });\n              } else if (res.data.message.userType === 'ADMIN') {\n                localStorage.setItem(\"AdminLogged\", \"AdminLogged\");\n                localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                localStorage.setItem(\"CustomerId\", res.data.message._id);\n\n                _this2.props.history.push('/dashboard');\n\n                _this2.setState({\n                  loginEmail: '',\n                  loginPass: '',\n                  loginEmailV: false,\n                  loginPassV: false\n                });\n              } else {\n                Swal.fire('', 'Your are Not Allowed  !', 'error');\n              }\n            } else {\n              Swal.fire('', 'Login unsuccessful  !', 'error');\n            }\n          }).catch(function (error) {\n            return console.error(error);\n          });\n        } else {\n          console.log('email field empty');\n          this.setState({\n            loginPassV: true\n          });\n        }\n      } else {\n        console.log('email field empty');\n        this.setState({\n          loginEmailV: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"apppage\",\n        children: /*#__PURE__*/_jsxDEV(MDBView, {\n          children: [/*#__PURE__*/_jsxDEV(MDBMask, {\n            className: \"white-text gradient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n            style: {\n              height: '100%',\n              width: '100%',\n              paddingTop: '10rem'\n            },\n            className: \"d-flex justify-content-center white-text align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(MDBRow, {\n              children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                md: \"12\",\n                className: \"text-center text-md-left mt-xl-5 mb-5\",\n                children: /*#__PURE__*/_jsxDEV(MDBAnimation, {\n                  type: \"fadeInLeft\",\n                  delay: \".3s\",\n                  children: /*#__PURE__*/_jsxDEV(MDBCard, {\n                    className: \"loginContainer\",\n                    children: /*#__PURE__*/_jsxDEV(\"form\", {\n                      className: \"needs-validation\",\n                      onSubmit: this.validateUser,\n                      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                        className: \"mx-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center\",\n                          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                            className: \"dark-grey-text mb-5\",\n                            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \" Login\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 295,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 294,\n                            columnNumber: 53\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                          label: \"Your email\",\n                          group: true,\n                          type: \"email\",\n                          validate: true,\n                          error: \"wrong\",\n                          success: \"right\",\n                          value: this.state.loginEmail,\n                          onChange: this.onChangeEmailV\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 298,\n                          columnNumber: 49\n                        }, this), this.state.loginEmailV ? /*#__PURE__*/_jsxDEV(MDBAlert, {\n                          color: \"danger\",\n                          children: \"Please enter a value for email !\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 57\n                        }, this) : '', /*#__PURE__*/_jsxDEV(MDBInput, {\n                          label: \"Your password\",\n                          group: true,\n                          type: \"password\",\n                          validate: true,\n                          containerClass: \"mb-0\",\n                          value: this.state.loginPass,\n                          onChange: this.onChangePassV\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 309,\n                          columnNumber: 49\n                        }, this), this.state.loginPassV ? /*#__PURE__*/_jsxDEV(MDBAlert, {\n                          color: \"danger\",\n                          children: \"Please enter a value for email !\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 57\n                        }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center mb-3\",\n                          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                            type: \"submit\",\n                            color: \"blue\",\n                            className: \"btn-block z-depth-1a buttonSign \",\n                            children: \"LOGIN\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 320,\n                            columnNumber: 53\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 319,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n                          className: \"mx-5 pt-3 mb-1\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"font-small grey-text d-flex justify-content-end\",\n                            children: \"Not a member?\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 326,\n                            columnNumber: 53\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/home/ps/IdeaProjects/Conference Management Tool/Frontend/src/components/views/Login/Login.js"],"names":["React","Component","MDBMask","MDBRow","MDBCol","MDBBtn","MDBView","MDBContainer","MDBAnimation","MDBAlert","MDBModal","MDBModalHeader","MDBModalBody","MDBModalFooter","MDBCardImage","MDBCard","MDBCardBody","MDBInput","Signup","getUser","saveUser","loginUser","Swal","Login","props","toggle","setState","modal","state","toggle2","modal2","model2","toggle3","fname","email","password","confirmpass","collapse","isWideEnough","loginEmail","loginPass","loginEmailV","loginPassV","onClick","bind","validateUser","onChangeFname","onChangeEmail","onChangePassword","onChangeConfirmPassword","onChangeEmailV","onChangePassV","event","target","value","name","console","log","preventDefault","then","res","data","message","userType","localStorage","setItem","_id","history","push","fire","catch","error","height","width","paddingTop"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {\n    MDBMask,\n    MDBRow,\n    MDBCol,\n    MDBBtn,\n    MDBView,\n    MDBContainer,\n    MDBAnimation,\n    MDBAlert,\n    MDBModal,\n    MDBModalHeader, MDBModalBody, MDBModalFooter, MDBCardImage\n} from 'mdbreact';\nimport './Login.css';\nimport {MDBCard, MDBCardBody, MDBInput} from 'mdbreact';\nimport Signup from \"../SignUp/Signup\";\nimport {getUser, saveUser} from \"../../services/signup.service\";\nimport {loginUser} from \"../../services/login.service\";\nimport * as Swal from \"sweetalert2\";\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapse: false,\n            isWideEnough: false,\n            modal: false,\n            model2: false,\n            fname: '',\n            email: '',\n            password: '',\n            confirmpass: '',\n            loginEmail: '',\n            loginPass: '',\n            loginEmailV: false,\n            loginPassV: false,\n\n        };\n\n        this.onClick = this.onClick.bind(this);\n        this.validateUser = this.validateUser.bind(this);\n        this.onChangeFname = this.onChangeFname.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n        this.onChangeEmailV = this.onChangeEmailV.bind(this);\n        this.onChangePassV = this.onChangePassV.bind(this);\n    }\n\n\n    onClick() {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    toggle2 = () => {\n        this.setState({\n            modal: !this.state.modal,\n            modal2: !this.state.model2\n        });\n    }\n\n    toggle3 = () => {\n        this.setState({\n            modal2: false,\n            fname: \"\",\n            email: \"\",\n            password: \"\",\n            confirmpass: \"\"\n\n        });\n    }\n    onChangeEmailV(event) {\n        this.setState({\n            loginEmail: event.target.value,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    onChangePassV(event) {\n        this.setState({\n            loginPass: event.target.value,\n            [event.target.name]: event.target.value\n        })\n    }\n\n\n    onChangeFname(event) {\n        console.log(event.target.value)\n        this.setState({\n            fname: event.target.value,\n            [event.target.name]: event.target.value\n        })\n    }\n\n\n    onChangeEmail(event) {\n        this.setState({\n            email: event.target.value,\n            [event.target.name]: event.target.value\n        })\n    }\n\n\n    onChangePassword(event) {\n        this.setState({\n            password: event.target.value,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    onChangeConfirmPassword(event) {\n        this.setState({\n            confirmpass: event.target.value,\n            [event.target.name]: event.target.value\n        })\n    }\n\n\n    // submitUser(event) {\n    //     event.preventDefault();\n    //     event.target.className += \" was-validated\";\n    //     if (this.state.password == this.state.confirmpass) {\n    //         if (this.state.fname != '') {\n    //             if (this.state.email != '') {\n    //                 if (this.state.password != '') {\n    //                     if (this.state.confirmpass != '') {\n    //                         const userDetail = {\n    //                             userName: this.state.fname,\n    //                             email: this.state.email,\n    //                             password: this.state.password,\n    //                             userType: 'Customer'\n    //                         }\n    //                         getUser(this.state.email).then(res => {\n    //                             if(res.data.message === 'not found'){\n    //                                 saveUser(userDetail).then(res=>{\n    //                                     if (res.data.success === 'successful') {\n    //                                         this.setState({\n    //                                             fname: '',\n    //                                             password: '',\n    //                                             confirmpass: '',\n    //                                             email: '',\n    //                                             modal2 :false\n    //                                         })\n    //                                         Swal.fire(\n    //                                             '',\n    //                                             'Added Success',\n    //                                             'success'\n    //                                         )\n    //                                     } else {\n    //                                         Swal.fire(\n    //                                             '',\n    //                                             'Added fail',\n    //                                             'error'\n    //                                         )\n    //                                     }\n    //                                 }).catch(error => console.error(error));\n    //                             }else {\n    //                                 Swal.fire(\n    //                                     '',\n    //                                     'You Cant Use This Email Please Enter Another One',\n    //                                     'error'\n    //                                 )\n    //                             }\n    //                         }).catch(error => console.error(error));\n    //                     } else {\n    //                     }\n    //                 } else {\n    //                 }\n    //\n    //             } else {\n    //             }\n    //\n    //         } else {\n    //         }\n    //     } else {\n    //         Swal.fire('',\n    //             'password and confirm password are not the same !',\n    //             'error');\n    //     }\n    // };\n\n    validateUser(event) {\n        event.preventDefault();\n        if (this.state.loginEmail != '') {\n            this.setState({\n                loginEmailV: false\n            })\n            if (this.state.loginPass != '') {\n                this.setState({\n                    loginPassV: false\n                })\n                loginUser(this.state.loginEmail,this.state.loginPass).then(res => {\n                    if (res.data.message !== 'not found') {\n                        if(res.data.message.userType==='WKC'){\n                            localStorage.setItem(\"WKCLogged\", \"WKCLogged\");\n                            localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                            localStorage.setItem(\"CustomerId\",res.data.message._id);\n                            this.props.history.push('/wkc');\n                            this.setState({\n                                loginEmail: '',\n                                loginPass: '',\n                                loginEmailV: false,\n                                loginPassV: false\n                            });\n                        }else if(res.data.message.userType==='ATTENDEE'){\n                            localStorage.setItem(\"AttendeeCLogged\", \"AttendeeCLogged\");\n                            localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                            localStorage.setItem(\"CustomerId\",res.data.message._id);\n                            this.props.history.push('/attendee');\n                            this.setState({\n                                loginEmail: '',\n                                loginPass: '',\n                                loginEmailV: false,\n                                loginPassV: false\n                            });\n                        }else if(res.data.message.userType==='RESEARCHER'){\n                            localStorage.setItem(\"ResearcherCLogged\", \"ResearcherCLogged\");\n                            localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                            localStorage.setItem(\"CustomerId\",res.data.message._id);\n                            this.props.history.push('/researcher');\n                            this.setState({\n                                loginEmail: '',\n                                loginPass: '',\n                                loginEmailV: false,\n                                loginPassV: false\n                            });\n                        }else if(res.data.message.userType==='ADMIN'){\n                            localStorage.setItem(\"AdminLogged\", \"AdminLogged\");\n                            localStorage.setItem(\"UserLogged\", \"UserLogged\");\n                            localStorage.setItem(\"CustomerId\",res.data.message._id);\n                            this.props.history.push('/dashboard');\n                            this.setState({\n                                loginEmail: '',\n                                loginPass: '',\n                                loginEmailV: false,\n                                loginPassV: false\n                            });\n                        }else {\n                            Swal.fire(\n                                '',\n                                'Your are Not Allowed  !',\n                                'error'\n                            )\n                        }\n                    } else {\n                        Swal.fire(\n                            '',\n                            'Login unsuccessful  !',\n                            'error'\n                        )\n                    }\n                }).catch(error => console.error(error));\n            } else {\n                console.log('email field empty');\n                this.setState({\n                    loginPassV: true\n                })\n            }\n        } else {\n            console.log('email field empty');\n            this.setState({\n                loginEmailV: true\n            })\n        }\n    }\n    ;\n\n\n    render() {\n        return (\n            <div id='apppage'>\n                <MDBView>\n                    <MDBMask className='white-text gradient'/>\n                    <MDBContainer\n                        style={{height: '100%', width: '100%', paddingTop: '10rem'}}\n                        className='d-flex justify-content-center white-text align-items-center'\n                    >\n                        <MDBRow>\n                            <MDBCol md='12' className='text-center text-md-left mt-xl-5 mb-5'>\n                                <MDBAnimation type='fadeInLeft' delay='.3s'>\n                                    <MDBCard className=\"loginContainer\">\n                                        <form className=\"needs-validation\"\n                                              onSubmit={this.validateUser}>\n                                            <MDBCardBody className=\"mx-4\">\n                                                <div className=\"text-center\">\n                                                    <h3 className=\"dark-grey-text mb-5\">\n                                                        <strong> Login</strong>\n                                                    </h3>\n                                                </div>\n                                                <MDBInput label=\"Your email\" group type=\"email\" validate error=\"wrong\"\n                                                          success=\"right\" value={this.state.loginEmail}\n                                                          onChange={this.onChangeEmailV}/>\n                                                {\n                                                    this.state.loginEmailV ?\n                                                        <MDBAlert color=\"danger\">\n                                                            Please enter a value for email !\n                                                        </MDBAlert> : ''\n                                                }\n\n                                                {/*<input value={this.state.loginPass} onChange={this.onChangePassV}/>*/}\n                                                <MDBInput label=\"Your password\" group type=\"password\" validate\n                                                          containerClass=\"mb-0\" value={this.state.loginPass}\n                                                          onChange={this.onChangePassV}/>\n                                                {\n                                                    this.state.loginPassV ?\n                                                        <MDBAlert color=\"danger\">\n                                                            Please enter a value for email !\n                                                        </MDBAlert> : ''\n                                                }\n\n                                                <div className=\"text-center mb-3\">\n                                                    <MDBBtn type=\"submit\" color='blue'\n                                                            className=\"btn-block z-depth-1a buttonSign \">\n                                                        LOGIN\n                                                    </MDBBtn>\n                                                </div>\n                                                <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\n                                                    <p className=\"font-small grey-text d-flex justify-content-end\">\n                                                        Not a member?\n                                                        {/*<MDBBtn outline color=\"info\" size=\"sm\" onClick={this.toggle2}>*/}\n                                                        {/*    Sign Up</MDBBtn>*/}\n                                                    </p>\n                                                </MDBModalFooter>\n                                            </MDBCardBody>\n                                        </form>\n\n                                    </MDBCard>\n                                </MDBAnimation>\n                            </MDBCol>\n\n                        </MDBRow>\n                    </MDBContainer>\n                </MDBView>\n                {/*<MDBContainer>*/}\n                {/*    <MDBModal isOpen={this.state.modal2} toggle={this.toggle3}>*/}\n                {/*        <MDBModalHeader toggle={this.toggle3}></MDBModalHeader>*/}\n                {/*        <Signup*/}\n                {/*            modelOne ={this.state.modal}*/}\n                {/*            submitUser={this.submitUser}*/}\n                {/*            firstName={this.state.fname}*/}\n                {/*            onChangeFname={this.onChangeFname}*/}\n                {/*            email ={this.state.email}*/}\n                {/*            onChaneEmail ={this.onChangeEmail}*/}\n                {/*            onChangePassword={this.onChangePassword}*/}\n                {/*            password={this.state.password}*/}\n                {/*            onChangeConfirmPassword ={this.onChangeConfirmPassword}*/}\n                {/*            confirmpass ={this.state.confirmpass}*/}\n                {/*        />*/}\n                {/*    </MDBModal>*/}\n                {/*</MDBContainer>*/}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}